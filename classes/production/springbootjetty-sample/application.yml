management:
  context-path: /manage
  port: ${SERVER_PORT}
  
# http://www.eclipse.org/jetty/documentation/current/quickstart-config-what.html
# https://dev.eclipse.org/mhonarc/lists/jetty-users/msg04751.html 
jetty:
  # The number of handler threads that will actually process requests
  workerThreads: 8
  # The size of the blocking queue for the threadpool. This is shared between
  # acceptors, selectors and worker threads
  blockingQueueSize: 13
  # OS configuration for maximum outstanding requests in the socket. This should
  # be equal or greater than the space you've considered in the blocking queue
  # for outstanding network requests.
  # This cannot be increased beyond the operating system limits, though.
  # See http://stackoverflow.com/questions/2193146/java-socket-accept-queue-length
  acceptQueueSize: 20
  # The number of threads to listen for connections. Acceptors just listen for
  # connections, and when a new connection is established just add it to a queue
  # Typically, 1 should be sufficient
  acceptors: 1
  # Selectors are responsible for all network traffic. Typically, they should be
  # equal to the number of cores
  selectors: 4
  # The idle timeout for a thread in Jety's threadpool. Note that this applicable
  # for acceptors, selectors and worker threads
  workerThreadIdleTimeoutMs: 120000
  serverPort: ${SERVER_PORT}
  
 
statsd:
  prefix: dev
  host: 127.0.0.1
  port: 8125
  pushIntervalSeconds: 60
  
# Set debug: true to get some really, really detailed messages
# debug: true

spring:
  zipkin:
    enabled: false
  application:
    name: springbootjetty-sample

swagger:
  title: Spring Boot + Jetty + Gradle sample service
  description: Spring Boot + Jetty starter template
  version: 1.0
  contact: my-team-email@flipkart.com
    
    
periodicHealthCheck:
  fixedDelayMs: 300000    
  
logging:
  level:
    com.ekart.springbootjetty.sample: DEBUG



database:
  packagesToScan: com.ekart.springbootjetty.sample.dal
  hikari:
    dataSourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource
    maximumPoolSize: 5
    maxLifetime: 30000
    idleTimeout: 30000
    autoCommit: false
    dataSourceProperties:
      url: jdbc:mysql://localhost:3306/SampleAppv3_db
      user: root
      password:
      prepStmtCacheSize: 256
      prepStmtCacheSqlLimit: 2048
      useServerPrepStmts: true
      cachePrepStmts: true
  # // http://blog.jhades.org/performance-tuning-of-spring-hibernate-applications/
  hibernateProperties:
    hibernate.jdbc.batch_size: 200
    hibernate.order_inserts: true
    hibernate.order_updates: true
    hibernate.generate_statistics: true
    hibernate.use_sql_comments: true
    hibernate.show_sql: true
    hibernate.format_sql: true